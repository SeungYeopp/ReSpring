services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "0:8080" # 동적 포트 할당
    environment:
      - SPRING_DATASOURCE_URL=${SPRING_DATASOURCE_URL}
      - SPRING_DATASOURCE_USERNAME=${SPRING_DATASOURCE_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${SPRING_DATASOURCE_PASSWORD}
    volumes:
      - ~/.gradle:/home/gradle/.gradle
    networks:
      - project-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "0:3000" # 동적 포트 할당
    networks:
      - project-network

  db:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306" # DB는 고정 포트를 유지
    networks:
      project-network:
        aliases:
          - database

  jenkins:
    build:
      context: ./jenkins
      dockerfile: Dockerfile
    user: root
    ports:
      - "8080:8080"
      - "50000:50000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - jenkins_home:/var/jenkins_home
    networks:
      - project-network

networks:
  project-network:
    driver: bridge

volumes:
  db_data:
  jenkins_home:
