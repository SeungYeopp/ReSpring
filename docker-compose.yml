services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATASOURCE_URL=${SPRING_DATASOURCE_URL}
      - SPRING_DATASOURCE_USERNAME=${SPRING_DATASOURCE_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${SPRING_DATASOURCE_PASSWORD}
    volumes:
#      - ./backend:/app
      - ~/.gradle:/home/gradle/.gradle
    networks:
      - project-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
    networks:
      - project-network

  db:
    image: mysql:8.0
    container_name: mysql-db
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - project-network

  jenkins:
    image: custom-jenkins:latest
    container_name: jenkins-server
    user: root
    ports:
      - "8081:8080"  # Jenkins UI
      - "50000:50000" # Jenkins 에이전트 통신
    volumes:
      - jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock # Docker 데몬 접근
    environment:
      JAVA_OPTS: "-Djenkins.install.runSetupWizard=false" # 초기 설정 스킵
    networks:
      - project-network

networks:
  project-network:
    driver: bridge

volumes:
  jenkins_home:
